// Code generated by xgen. DO NOT EDIT.

package schema

import (
	"encoding/xml"
)

// Atos ...
type Atos struct {
	XMLName  xml.Name `xml:"atos"`
	HjidAttr int64    `xml:"Hjid,attr,omitempty"`
	Ato      []*Ato   `xml:"ato"`
}

// MessageAtos ...
type MessageAtos struct {
	XMLName         xml.Name `xml:"messageAtos"`
	VersionAttr     string   `xml:"version,attr"`
	HjidAttr        int64    `xml:"Hjid,attr,omitempty"`
	MessageID       int      `xml:"messageID"`
	MessageDate     string   `xml:"messageDate"`
	CodigoServentia int      `xml:"codigoServentia"`
	Atos            *Atos    `xml:"atos"`
	Signature       string   `xml:"Signature"`
}

// Selos ...
type Selos struct {
	XMLName  xml.Name `xml:"selos"`
	HjidAttr int64    `xml:"Hjid,attr,omitempty"`
	Selo     []*Selo  `xml:"selo"`
}

// MessageSelos ...
type MessageSelos struct {
	XMLName         xml.Name `xml:"messageSelos"`
	VersionAttr     string   `xml:"version,attr"`
	HjidAttr        int64    `xml:"Hjid,attr,omitempty"`
	MessageID       int      `xml:"messageID"`
	MessageDate     string   `xml:"messageDate"`
	CodigoServentia int      `xml:"codigoServentia"`
	Nupedido        int64    `xml:"nupedido"`
	Tppedido        string   `xml:"tppedido"`
	Selos           *Selos   `xml:"selos"`
	Signature       string   `xml:"Signature"`
}

// Gemeos ...
type Gemeos struct {
	XMLName        xml.Name `xml:"gemeos"`
	HjidAttr       int64    `xml:"Hjid,attr,omitempty"`
	NomeGemeo      string   `xml:"nomeGemeo"`
	MatriculaGemeo string   `xml:"matriculaGemeo"`
}

// CNascimento ...
type CNascimento struct {
	CertidaoRC          *CertidaoRC       `xml:"certidaoRC"`
	NomeDeclarante      string            `xml:"nomeDeclarante"`
	ProcessoJudicial    *ProcessoJudicial `xml:"processoJudicial"`
	Nome                string            `xml:"nome"`
	NomePai             string            `xml:"nomePai"`
	NomeMae             string            `xml:"nomeMae"`
	NomeAvoMaterna      string            `xml:"nomeAvoMaterna"`
	NomeAvoMaterno      string            `xml:"nomeAvoMaterno"`
	NomeAvoPaterna      string            `xml:"nomeAvoPaterna"`
	NomeAvoPaterno      string            `xml:"nomeAvoPaterno"`
	Filiacao            []*PessoaFiliacao `xml:"filiacao"`
	DataHoraNascimento  string            `xml:"dataHoraNascimento"`
	Gemeos              []*Gemeos         `xml:"gemeos"`
	NumeroDNV           string            `xml:"numeroDNV"`
	MunicipioNascimento int               `xml:"municipioNascimento"`
	Naturalidade        int               `xml:"naturalidade"`
	Cpfnascido          string            `xml:"cpfnascido"`
	Sexo                string            `xml:"sexo"`
	Matricula           string            `xml:"matricula"`
	*AtoSelado
}

// AtoSelado ...
type AtoSelado struct {
	Selo                                      *SeloAto          `xml:"selo"`
	Retificador                               bool              `xml:"retificador"`
	NumeroSerieSeloOriginal                   string            `xml:"numeroSerieSeloOriginal"`
	RecolhimentoFRJ                           []*ImpostosTaxas  `xml:"recolhimentoFRJ"`
	Solicitante                               *PessoaResumo     `xml:"solicitante"`
	ProcessoJudicialRessarcimento             *ProcessoJudicial `xml:"processoJudicialRessarcimento"`
	TipoEnteDeclaradoUtilidadePublicaEstadual int               `xml:"tipoEnteDeclaradoUtilidadePublicaEstadual"`
	CopiasXerox                               int               `xml:"copiasXerox"`
	Microfilmagem                             int               `xml:"microfilmagem"`
	Digitalizacao                             int               `xml:"digitalizacao"`
	*Ato
}

// Ato ...
type Ato struct {
	HjidAttr           int64     `xml:"Hjid,attr,omitempty"`
	IdAto              int       `xml:"idAto"`
	CodigoServentia    int       `xml:"codigoServentia"`
	DataAto            string    `xml:"dataAto"`
	DataSolicitacaoAto string    `xml:"dataSolicitacaoAto"`
	DataRecebimento    string    `xml:"dataRecebimento"`
	TipoAto            int       `xml:"tipoAto"`
	ValorEmolumento    float64   `xml:"valorEmolumento"`
	ValorAto           float64   `xml:"valorAto"`
	TipoCobranca       int       `xml:"tipoCobranca"`
	Responsavel        int       `xml:"responsavel"`
	Recibo             []*Recibo `xml:"recibo"`
}

// CertidaoRC ...
type CertidaoRC struct {
	HjidAttr    int64       `xml:"Hjid,attr,omitempty"`
	Certidao    *Certidao   `xml:"certidao"`
	Registro    *RegistroRC `xml:"registro"`
	NumeroVia   int         `xml:"numeroVia"`
	Observacoes []string    `xml:"observacoes"`
}

// Certidao ...
type Certidao struct {
	HjidAttr              int64   `xml:"Hjid,attr,omitempty"`
	Solicitante           *Pessoa `xml:"solicitante"`
	DataValidade          string  `xml:"dataValidade"`
	FolhasExcedentes      int     `xml:"folhasExcedentes"`
	CopiasXeroxMicrofilme int     `xml:"copiasXeroxMicrofilme"`
	LocalArquivamento     string  `xml:"localArquivamento"`
	NumeroVia             int     `xml:"numeroVia"`
}

// Pessoa ...
type Pessoa struct {
	HjidAttr       int64        `xml:"Hjid,attr,omitempty"`
	NomePessoa     string       `xml:"nomePessoa"`
	TipoPessoa     string       `xml:"tipoPessoa"`
	EstadoCivil    int          `xml:"estadoCivil"`
	Profissao      int          `xml:"profissao"`
	Nacionalidade  int          `xml:"nacionalidade"`
	DataNascimento string       `xml:"dataNascimento"`
	Documento      []*Documento `xml:"documento"`
	Endereco       []*Endereco  `xml:"endereco"`
	Telefone       []*Telefone  `xml:"telefone"`
	Email          []*Email     `xml:"email"`
	Sexo           string       `xml:"sexo"`
}

// Documento ...
type Documento struct {
	HjidAttr      int64  `xml:"Hjid,attr,omitempty"`
	TipoDocumento int    `xml:"tipoDocumento"`
	Numero        string `xml:"numero"`
	OrgaoEmissor  string `xml:"orgaoEmissor"`
	DataEmissao   string `xml:"dataEmissao"`
}

// Endereco ...
type Endereco struct {
	HjidAttr            int64  `xml:"Hjid,attr,omitempty"`
	TipoEndereco        int    `xml:"tipoEndereco"`
	DescricaoLogradouro string `xml:"descricaoLogradouro"`
	Numero              string `xml:"numero"`
	Bairro              string `xml:"bairro"`
	Complemento         string `xml:"complemento"`
	Cidade              int    `xml:"cidade"`
	Uf                  string `xml:"uf"`
	Cep                 string `xml:"cep"`
	CidadeExterior      string `xml:"cidadeExterior"`
	Pais                int    `xml:"pais"`
}

// Telefone ...
type Telefone struct {
	HjidAttr     int64  `xml:"Hjid,attr,omitempty"`
	TipoTelefone int    `xml:"tipoTelefone"`
	Ddd          string `xml:"ddd"`
	Numero       string `xml:"numero"`
}

// Email ...
type Email struct {
	HjidAttr      int64  `xml:"Hjid,attr,omitempty"`
	TipoEmail     int    `xml:"tipoEmail"`
	EnderecoEmail string `xml:"enderecoEmail"`
}

// RegistroRC ...
type RegistroRC struct {
	HjidAttr      int64     `xml:"Hjid,attr,omitempty"`
	Registro      *Registro `xml:"registro"`
	NumeroAssento int       `xml:"numeroAssento"`
}

// Registro ...
type Registro struct {
	HjidAttr      int64  `xml:"Hjid,attr,omitempty"`
	CodigoLivro   int    `xml:"codigoLivro"`
	PaginaInicial string `xml:"paginaInicial"`
	PaginaFinal   string `xml:"paginaFinal"`
	DataRegistro  string `xml:"dataRegistro"`
}

// ProcessoJudicial ...
type ProcessoJudicial struct {
	HjidAttr       int64  `xml:"Hjid,attr,omitempty"`
	TipoProcesso   string `xml:"tipoProcesso"`
	NumeroProcesso string `xml:"numeroProcesso"`
}

// PessoaFiliacao ...
type PessoaFiliacao struct {
	HjidAttr   int64    `xml:"Hjid,attr,omitempty"`
	Pessoa     *Pessoa  `xml:"pessoa"`
	Progenitor []string `xml:"progenitor"`
}

// SeloAto ...
type SeloAto struct {
	HjidAttr    int64   `xml:"Hjid,attr,omitempty"`
	TipoSelo    int     `xml:"tipoSelo"`
	NumeroSerie string  `xml:"numeroSerie"`
	ValorSelo   float64 `xml:"valorSelo"`
	Validador   string  `xml:"validador"`
	Nucartorio  int     `xml:"nucartorio"`
}

// ImpostosTaxas ...
type ImpostosTaxas struct {
	HjidAttr        int64   `xml:"Hjid,attr,omitempty"`
	NomeImposto     string  `xml:"nomeImposto"`
	NumeroDocumento string  `xml:"numeroDocumento"`
	DataPagamento   string  `xml:"dataPagamento"`
	ValorPago       float64 `xml:"valorPago"`
}

// PessoaResumo ...
type PessoaResumo struct {
	HjidAttr       int64        `xml:"Hjid,attr,omitempty"`
	NomePessoa     string       `xml:"nomePessoa"`
	TipoPessoa     string       `xml:"tipoPessoa"`
	EstadoCivil    int          `xml:"estadoCivil"`
	Profissao      int          `xml:"profissao"`
	Nacionalidade  int          `xml:"nacionalidade"`
	DataNascimento string       `xml:"dataNascimento"`
	Documento      []*Documento `xml:"documento"`
	Endereco       []*Endereco  `xml:"endereco"`
	Telefone       []*Telefone  `xml:"telefone"`
	Email          []*Email     `xml:"email"`
	Sexo           string       `xml:"sexo"`
}

// Recibo ...
type Recibo struct {
	HjidAttr     int64   `xml:"Hjid,attr,omitempty"`
	NumeroRecibo int     `xml:"numeroRecibo"`
	DataRecibo   string  `xml:"dataRecibo"`
	ValorRecibo  float64 `xml:"valorRecibo"`
}

// Protesto ...
type Protesto struct {
	XMLName          xml.Name   `xml:"protesto"`
	HjidAttr         int64      `xml:"Hjid,attr,omitempty"`
	Protocolo        *Protocolo `xml:"protocolo"`
	Cancelamento     bool       `xml:"cancelamento"`
	DataCancelamento string     `xml:"dataCancelamento"`
}

// Devedor ...
type Devedor struct {
	XMLName          xml.Name    `xml:"devedor"`
	HjidAttr         int64       `xml:"Hjid,attr,omitempty"`
	DocumentoDevedor *Documento  `xml:"documentoDevedor"`
	Selo             *SeloAto    `xml:"selo"`
	Protesto         []*Protesto `xml:"protesto"`
}

// CRelacaoProtesto ...
type CRelacaoProtesto struct {
	Certidao *Certidao  `xml:"certidao"`
	Devedor  []*Devedor `xml:"devedor"`
	*Ato
}

// Protocolo ...
type Protocolo struct {
	HjidAttr             int64  `xml:"Hjid,attr,omitempty"`
	CodigoLivroProtocolo string `xml:"codigoLivroProtocolo"`
	NumeroProtocolo      int64  `xml:"numeroProtocolo"`
	DataProtocolo        string `xml:"dataProtocolo"`
}

// AtoNaoSelado ...
type AtoNaoSelado struct {
	*Ato
}

// EPactoAntenupcial ...
type EPactoAntenupcial struct {
	Escritura         *Escritura        `xml:"escritura"`
	NubenteMasculino  *ParteEscritura   `xml:"nubenteMasculino"`
	NubenteFeminino   *ParteEscritura   `xml:"nubenteFeminino"`
	Nubente           []*ParteEscritura `xml:"nubente"`
	RegimeBensAdotado string            `xml:"regimeBensAdotado"`
	*AtoSelado
}

// Escritura ...
type Escritura struct {
	HjidAttr                   int64                         `xml:"Hjid,attr,omitempty"`
	Protocolo                  *Protocolo                    `xml:"protocolo"`
	AssinadaServentia          bool                          `xml:"assinadaServentia"`
	EnderecoAssinatura         *Endereco                     `xml:"enderecoAssinatura"`
	Intervenientes             []*ParteEscritura             `xml:"intervenientes"`
	DispensaTestemunha         bool                          `xml:"dispensaTestemunha"`
	Testemunha                 []*Pessoa                     `xml:"testemunha"`
	ObjetoNegocio              []*ObjetoNegocio              `xml:"objetoNegocio"`
	ValorNegocio               float64                       `xml:"valorNegocio"`
	ClausulaGeral              []string                      `xml:"clausulaGeral"`
	SeloVinculado              []string                      `xml:"seloVinculado"`
	SeloVinculadoJuridicamente []*SeloVinculadoJuridicamente `xml:"seloVinculadoJuridicamente"`
	Registro                   *Registro                     `xml:"registro"`
	Itbi                       []*ImpostosTaxas              `xml:"itbi"`
	TipoAtoVinculado           []int                         `xml:"tipoAtoVinculado"`
	TipoRegistroAverbacao      int                           `xml:"tipoRegistroAverbacao"`
}

// ParteEscritura ...
type ParteEscritura struct {
	HjidAttr              int64         `xml:"Hjid,attr,omitempty"`
	Parte                 *Pessoa       `xml:"parte"`
	RepresentantePJ       *Pessoa       `xml:"representantePJ"`
	Procurador            *Procurador   `xml:"procurador"`
	Incapacidade          *Incapacidade `xml:"incapacidade"`
	AssinanteARogo        *Pessoa       `xml:"assinanteARogo"`
	Conjuge               *Pessoa       `xml:"conjuge"`
	ProcuradorConjuge     *Procurador   `xml:"procuradorConjuge"`
	IncapacidadeConjuge   *Incapacidade `xml:"incapacidadeConjuge"`
	AssinanteARogoConjuge *Pessoa       `xml:"assinanteARogoConjuge"`
	MotivoAusenciaConjuge string        `xml:"motivoAusenciaConjuge"`
	RegimeBensCasamento   string        `xml:"regimeBensCasamento"`
}

// Procurador ...
type Procurador struct {
	HjidAttr                  int64   `xml:"Hjid,attr,omitempty"`
	Procurador                *Pessoa `xml:"procurador"`
	NumeroCartorioProcuracao  int     `xml:"numeroCartorioProcuracao"`
	NumeroLivroProcuracao     string  `xml:"numeroLivroProcuracao"`
	NumeroFolhaProcuracao     int     `xml:"numeroFolhaProcuracao"`
	NumeroSerieSeloProcuracao string  `xml:"numeroSerieSeloProcuracao"`
}

// Incapacidade ...
type Incapacidade struct {
	HjidAttr            int64   `xml:"Hjid,attr,omitempty"`
	TipoIncapacidade    string  `xml:"tipoIncapacidade"`
	Representante       *Pessoa `xml:"representante"`
	Comparecimento      bool    `xml:"comparecimento"`
	AutorizacaoJudicial bool    `xml:"autorizacaoJudicial"`
}

// Advogado ...
type Advogado struct {
	HjidAttr              int64   `xml:"Hjid,attr,omitempty"`
	Advogado              *Pessoa `xml:"advogado"`
	NumeroOAB             int     `xml:"numeroOAB"`
	AssistenciaJudiciaria bool    `xml:"assistenciaJudiciaria"`
}

// ObjetoNegocio ...
type ObjetoNegocio struct {
	HjidAttr        int64   `xml:"Hjid,attr,omitempty"`
	TipoObjeto      string  `xml:"tipoObjeto"`
	Especificacao   string  `xml:"especificacao"`
	Caracteristicas string  `xml:"caracteristicas"`
	DetalhesImovel  *Imovel `xml:"detalhesImovel"`
	FormaPagamento  string  `xml:"formaPagamento"`
	ValorObjeto     float64 `xml:"valorObjeto"`
}

// OrgaoAutorizacao ...
type OrgaoAutorizacao struct {
	XMLName               xml.Name `xml:"orgaoAutorizacao"`
	HjidAttr              int64    `xml:"Hjid,attr,omitempty"`
	NomeOrgao             string   `xml:"nomeOrgao"`
	DataAutorizacao       string   `xml:"dataAutorizacao"`
	AutoridadeResponsavel string   `xml:"autoridadeResponsavel"`
}

// DetalhesRural ...
type DetalhesRural struct {
	XMLName                 xml.Name            `xml:"detalhesRural"`
	HjidAttr                int64               `xml:"Hjid,attr,omitempty"`
	Ccirincra               string              `xml:"ccir_incra"`
	Itr                     *ImpostosTaxas      `xml:"itr"`
	Nirf                    string              `xml:"nirf"`
	Fronteira               bool                `xml:"fronteira"`
	Mei                     int                 `xml:"mei"`
	AdquiridoPorEstrangeiro bool                `xml:"adquiridoPorEstrangeiro"`
	OrgaoAutorizacao        []*OrgaoAutorizacao `xml:"orgaoAutorizacao"`
}

// DetalhesUrbano ...
type DetalhesUrbano struct {
	XMLName  xml.Name       `xml:"detalhesUrbano"`
	HjidAttr int64          `xml:"Hjid,attr,omitempty"`
	Itbi     *ImpostosTaxas `xml:"itbi"`
}

// Imovel ...
type Imovel struct {
	HjidAttr             int64           `xml:"Hjid,attr,omitempty"`
	TipoImovel           string          `xml:"tipoImovel"`
	Matricula            string          `xml:"matricula"`
	Confrontacoes        string          `xml:"confrontacoes"`
	Endereco             *Endereco       `xml:"endereco"`
	Area                 float64         `xml:"area"`
	DetalhesRural        *DetalhesRural  `xml:"detalhesRural"`
	DetalhesUrbano       *DetalhesUrbano `xml:"detalhesUrbano"`
	InscricaoImobiliaria string          `xml:"inscricaoImobiliaria"`
}

// SeloVinculadoJuridicamente ...
type SeloVinculadoJuridicamente struct {
	HjidAttr            int64  `xml:"Hjid,attr,omitempty"`
	Numeroserie         string `xml:"numeroserie"`
	TipoNegocioJuridico int    `xml:"tipoNegocioJuridico"`
}

// CMortePresumida ...
type CMortePresumida struct {
	CertidaoRC          *CertidaoRC       `xml:"certidaoRC"`
	PresumidamenteMorto *Pessoa           `xml:"presumidamenteMorto"`
	NomeMae             string            `xml:"nomeMae"`
	NomePai             string            `xml:"nomePai"`
	Filiacao            []string          `xml:"filiacao"`
	NomeFilho           []string          `xml:"nomeFilho"`
	DataFalecimento     string            `xml:"dataFalecimento"`
	ProcessoJudicial    *ProcessoJudicial `xml:"processoJudicial"`
	*AtoSelado
}

// CPositivaProtesto ...
type CPositivaProtesto struct {
	Certidao *Certidao    `xml:"certidao"`
	Protesto []*Protocolo `xml:"protesto"`
	*AtoSelado
}

// CPersonalidadeJuridica ...
type CPersonalidadeJuridica struct {
	CertidaoRC    *CertidaoRC `xml:"certidaoRC"`
	Protocolo     *Protocolo  `xml:"protocolo"`
	DenominacaoPJ string      `xml:"denominacaoPJ"`
	TipoDocumento string      `xml:"tipoDocumento"`
	*AtoSelado
}

// CNegativaProtesto ...
type CNegativaProtesto struct {
	Certidao *Certidao `xml:"certidao"`
	Parte    []*Pessoa `xml:"parte"`
	*AtoSelado
}

// RecFirmaSinalPublico ...
type RecFirmaSinalPublico struct {
	NomeSignatario       string `xml:"nomeSignatario"`
	NomeOficioSignatario string `xml:"nomeOficioSignatario"`
	DescricaoDocumento   string `xml:"descricaoDocumento"`
	Ressalva             string `xml:"ressalva"`
	*AtoSelado
}

// CVintenaria ...
type CVintenaria struct {
	CertidaoRI     *CertidaoRI `xml:"certidaoRI"`
	ConstaAcoes    bool        `xml:"constaAcoes"`
	DescricaoAcoes string      `xml:"descricaoAcoes"`
	*AtoSelado
}

// CertidaoRI ...
type CertidaoRI struct {
	HjidAttr                    int64           `xml:"Hjid,attr,omitempty"`
	Certidao                    *Certidao       `xml:"certidao"`
	NumeroVia                   int             `xml:"numeroVia"`
	Matricula                   string          `xml:"matricula"`
	Proprietario                []*PessoaResumo `xml:"proprietario"`
	Conteudo                    []string        `xml:"conteudo"`
	Registro                    *Registro       `xml:"registro"`
	NumeroAssento               string          `xml:"numeroAssento"`
	Imovel                      *Imovel         `xml:"imovel"`
	NumeroSeloRegistroAverbacao string          `xml:"numeroSeloRegistroAverbacao"`
	MatriculaNacional           int             `xml:"matriculaNacional"`
}

// EUniaoEstavel ...
type EUniaoEstavel struct {
	Escritura           *Escritura        `xml:"escritura"`
	ConviventeMasculino *ParteEscritura   `xml:"conviventeMasculino"`
	ConviventeFeminino  *ParteEscritura   `xml:"conviventeFeminino"`
	Convivente          []*ParteEscritura `xml:"convivente"`
	RegimeBensAdotado   string            `xml:"regimeBensAdotado"`
	DataInicioUniao     string            `xml:"dataInicioUniao"`
	*AtoSelado
}

// Consultado ...
type Consultado struct {
	XMLName           xml.Name    `xml:"consultado"`
	BensEncontrados   bool        `xml:"bensEncontrados"`
	Matricula         []string    `xml:"matricula"`
	RegistroAnterior  []*Registro `xml:"registroAnterior"`
	NumeroTranscricao string      `xml:"numeroTranscricao"`
	*PessoaResumo
}

// CNegativaBens ...
type CNegativaBens struct {
	Certidao          *Certidao     `xml:"certidao"`
	Consultado        []*Consultado `xml:"consultado"`
	MatriculaNacional int           `xml:"matriculaNacional"`
	*AtoSelado
}

// CInteiroTeor ...
type CInteiroTeor struct {
	CertidaoRC *CertidaoRC `xml:"certidaoRC"`
	*AtoSelado
}

// EDeclaratoria ...
type EDeclaratoria struct {
	Escritura         *Escritura        `xml:"escritura"`
	Declarante        []*ParteEscritura `xml:"declarante"`
	UnidadesAutonomas int               `xml:"unidadesAutonomas"`
	*AtoSelado
}

// ECompraVendaDoacaoConfDivida ...
type ECompraVendaDoacaoConfDivida struct {
	Escritura      *Escritura        `xml:"escritura"`
	Outorgante     []*ParteEscritura `xml:"outorgante"`
	Outorgado      []*ParteEscritura `xml:"outorgado"`
	Corretor       *Corretor         `xml:"corretor"`
	Frj            []*ImpostosTaxas  `xml:"frj"`
	Itcmd          []*ImpostosTaxas  `xml:"itcmd"`
	OutrosImpostos []*ImpostosTaxas  `xml:"outrosImpostos"`
	*AtoSelado
}

// Corretor ...
type Corretor struct {
	HjidAttr     int64  `xml:"Hjid,attr,omitempty"`
	NumeroCRECI  int    `xml:"numeroCRECI"`
	NomeCorretor string `xml:"nomeCorretor"`
}

// RecFirmaSemelhanca ...
type RecFirmaSemelhanca struct {
	Signatario        *Pessoa `xml:"signatario"`
	NumeroFichaPadrao string  `xml:"numeroFichaPadrao"`
	DescricaoDocto    string  `xml:"descricaoDocto"`
	Ressalva          string  `xml:"ressalva"`
	*AtoSelado
}

// DadosObito ...
type DadosObito struct {
	XMLName              xml.Name  `xml:"dadosObito"`
	HjidAttr             int64     `xml:"Hjid,attr,omitempty"`
	DataObito            string    `xml:"dataObito"`
	LocalObito           *Endereco `xml:"localObito"`
	LocalObitoAproximado string    `xml:"localObitoAproximado"`
	SeloCertidaoObito    string    `xml:"seloCertidaoObito"`
}

// DeCujus ...
type DeCujus struct {
	XMLName    xml.Name    `xml:"deCujus"`
	DadosObito *DadosObito `xml:"dadosObito"`
	*ParteEscritura
}

// AdvogadoAssistente ...
type AdvogadoAssistente struct {
	XMLName               xml.Name `xml:"advogadoAssistente"`
	HjidAttr              int64    `xml:"Hjid,attr,omitempty"`
	Advogado              *Pessoa  `xml:"advogado"`
	NumeroOAB             int      `xml:"numeroOAB"`
	AssistenciaJudiciaria bool     `xml:"assistenciaJudiciaria"`
}

// Herdeiro ...
type Herdeiro struct {
	XMLName            xml.Name            `xml:"herdeiro"`
	AdvogadoAssistente *AdvogadoAssistente `xml:"advogadoAssistente"`
	ViuvoMeeiro        bool                `xml:"viuvoMeeiro"`
	Inventariante      bool                `xml:"inventariante"`
	*ParteEscritura
}

// EInventarioPartilha ...
type EInventarioPartilha struct {
	Escritura      *Escritura       `xml:"escritura"`
	DeCujus        []*DeCujus       `xml:"deCujus"`
	Herdeiro       []*Herdeiro      `xml:"herdeiro"`
	Frj            []*ImpostosTaxas `xml:"frj"`
	Itcmd          []*ImpostosTaxas `xml:"itcmd"`
	OutrosImpostos []*ImpostosTaxas `xml:"outrosImpostos"`
	*AtoSelado
}

// TranferenciaVeiculo ...
type TranferenciaVeiculo struct {
	XMLName          xml.Name `xml:"tranferenciaVeiculo"`
	HjidAttr         int64    `xml:"Hjid,attr,omitempty"`
	Placa            string   `xml:"placa"`
	Renavam          string   `xml:"renavam"`
	CpfCnpjComprador string   `xml:"cpfCnpjComprador"`
	NomeComprador    string   `xml:"nomeComprador"`
}

// RecFirmaAutenticidade ...
type RecFirmaAutenticidade struct {
	Signatario           *Pessoa              `xml:"signatario"`
	DeficienteVisual     bool                 `xml:"deficienteVisual"`
	RelativamenteIncapaz bool                 `xml:"relativamenteIncapaz"`
	Testemunha           []*Pessoa            `xml:"testemunha"`
	PaiOuResponsavel     []*Pessoa            `xml:"paiOuResponsavel"`
	DescricaoDocto       string               `xml:"descricaoDocto"`
	Ressalva             string               `xml:"ressalva"`
	TranferenciaVeiculo  *TranferenciaVeiculo `xml:"tranferenciaVeiculo"`
	*AtoSelado
}

// CInteiroTeorRI ...
type CInteiroTeorRI struct {
	CertidaoRI     *CertidaoRI `xml:"certidaoRI"`
	DetalhesImovel *Imovel     `xml:"detalhesImovel"`
	*AtoSelado
}

// EEmancipacao ...
type EEmancipacao struct {
	Escritura   *Escritura        `xml:"escritura"`
	Pai         *ParteEscritura   `xml:"pai"`
	Mae         *ParteEscritura   `xml:"mae"`
	PaiFalecido bool              `xml:"paiFalecido"`
	MaeFalecida bool              `xml:"maeFalecida"`
	Filiacao    []*ParteEscritura `xml:"filiacao"`
	Tutor       *ParteEscritura   `xml:"tutor"`
	Emancipado  *ParteEscritura   `xml:"emancipado"`
	*AtoSelado
}

// ETestamento ...
type ETestamento struct {
	Escritura      *Escritura        `xml:"escritura"`
	Testador       []*ParteEscritura `xml:"testador"`
	Testamenteiro  []*ParteEscritura `xml:"testamenteiro"`
	TipoTestamento int               `xml:"tipoTestamento"`
	Nascituro      int               `xml:"nascituro"`
	*AtoSelado
}

// ESubestabelecimento ...
type ESubestabelecimento struct {
	Escritura              *Escritura        `xml:"escritura"`
	Outorgante             []*ParteEscritura `xml:"outorgante"`
	Outorgado              []*ParteEscritura `xml:"outorgado"`
	DataValidade           string            `xml:"dataValidade"`
	TipoSubestabelecimento int               `xml:"tipoSubestabelecimento"`
	PoderesConferidos      string            `xml:"poderesConferidos"`
	*AtoSelado
}

// CRegistroPJ ...
type CRegistroPJ struct {
	CertidaoRC             *CertidaoRC `xml:"certidaoRC"`
	Parte                  []*Pessoa   `xml:"parte"`
	TipoInscricaoMatricula string      `xml:"tipoInscricaoMatricula"`
	Protocolo              *Protocolo  `xml:"protocolo"`
	ValorNegocio           float64     `xml:"valorNegocio"`
	TipoRegistroAverbacao  int         `xml:"tipoRegistroAverbacao"`
	*AtoSelado
}

// EAtaNotarial ...
type EAtaNotarial struct {
	Escritura *Escritura        `xml:"escritura"`
	Parte     []*ParteEscritura `xml:"parte"`
	*AtoSelado
}

// CObito ...
type CObito struct {
	CertidaoRC        *CertidaoRC       `xml:"certidaoRC"`
	NomeDeclarante    string            `xml:"nomeDeclarante"`
	ProcessoJudicial  *ProcessoJudicial `xml:"processoJudicial"`
	DeCujus           *Pessoa           `xml:"deCujus"`
	NomeMae           string            `xml:"nomeMae"`
	NomePai           string            `xml:"nomePai"`
	Filiacao          []string          `xml:"filiacao"`
	DataFalecimento   string            `xml:"dataFalecimento"`
	CausaMorte        string            `xml:"causaMorte"`
	LocalFalecimento  string            `xml:"localFalecimento"`
	LocalSepultamento string            `xml:"localSepultamento"`
	Medico            *Medico           `xml:"medico"`
	NumeroDO          string            `xml:"numeroDO"`
	Matricula         string            `xml:"matricula"`
	*AtoSelado
}

// Medico ...
type Medico struct {
	HjidAttr   int64      `xml:"Hjid,attr,omitempty"`
	Documento  *Documento `xml:"documento"`
	NomeMedico string     `xml:"nomeMedico"`
}

// CCasamento ...
type CCasamento struct {
	CertidaoRC        *CertidaoRC `xml:"certidaoRC"`
	ConjugeVarao      *Conjuge    `xml:"conjugeVarao"`
	ConjugeVaroa      *Conjuge    `xml:"conjugeVaroa"`
	Conjuge           []*Conjuge  `xml:"conjuge"`
	RegimeBens        string      `xml:"regimeBens"`
	CpfJuizdePaz      string      `xml:"cpfJuizdePaz"`
	PerimetroUrbano   bool        `xml:"perimetroUrbano"`
	DentroServentia   bool        `xml:"dentroServentia"`
	DentroExpediente  bool        `xml:"dentroExpediente"`
	SeloHabilitacao   string      `xml:"seloHabilitacao"`
	Matricula         string      `xml:"matricula"`
	CasamentoColetivo bool        `xml:"casamentoColetivo"`
	*AtoSelado
}

// Conjuge ...
type Conjuge struct {
	HjidAttr    int64    `xml:"Hjid,attr,omitempty"`
	Pessoa      *Pessoa  `xml:"pessoa"`
	NomePai     string   `xml:"nomePai"`
	NomeMae     string   `xml:"nomeMae"`
	Filiacao    []string `xml:"filiacao"`
	NomeAdotado string   `xml:"nomeAdotado"`
}

// CAusencia ...
type CAusencia struct {
	CertidaoRC       *CertidaoRC       `xml:"certidaoRC"`
	Ausente          *Pessoa           `xml:"ausente"`
	Curador          *Pessoa           `xml:"curador"`
	AusenteDesde     string            `xml:"ausenteDesde"`
	ProcessoJudicial *ProcessoJudicial `xml:"processoJudicial"`
	*AtoSelado
}

// CNatimorto ...
type CNatimorto struct {
	CertidaoRC          *CertidaoRC       `xml:"certidaoRC"`
	NomeDeclarante      string            `xml:"nomeDeclarante"`
	ProcessoJudicial    *ProcessoJudicial `xml:"processoJudicial"`
	Pai                 *Pessoa           `xml:"pai"`
	Mae                 *Pessoa           `xml:"mae"`
	Nome                string            `xml:"nome"`
	Filiacao            []*PessoaFiliacao `xml:"filiacao"`
	Sexo                string            `xml:"sexo"`
	TempoGestacao       string            `xml:"tempoGestacao"`
	DataHoraFalecimento string            `xml:"dataHoraFalecimento"`
	CausaMorte          string            `xml:"causaMorte"`
	LocalFalecimento    string            `xml:"localFalecimento"`
	LocalSepultamento   string            `xml:"localSepultamento"`
	Medico              *Medico           `xml:"medico"`
	*AtoSelado
}

// CEncerramentoMatricula ...
type CEncerramentoMatricula struct {
	CertidaoRI *CertidaoRI `xml:"certidaoRI"`
	*AtoSelado
}

// CRegistroTD ...
type CRegistroTD struct {
	CertidaoRC            *CertidaoRC `xml:"certidaoRC"`
	Protocolo             *Protocolo  `xml:"protocolo"`
	Partes                []*Pessoa   `xml:"partes"`
	DenominacaoAto        string      `xml:"denominacaoAto"`
	ValorNegocio          float64     `xml:"valorNegocio"`
	TipoRegistroAverbacao int         `xml:"tipoRegistroAverbacao"`
	*AtoSelado
}

// Autenticacao ...
type Autenticacao struct {
	DescricaoDocto string `xml:"descricaoDocto"`
	Ressalva       string `xml:"ressalva"`
	*AtoSelado
}

// CHabilitacaoCasamento ...
type CHabilitacaoCasamento struct {
	CertidaoRC         *CertidaoRC `xml:"certidaoRC"`
	ConjugeVarao       *Conjuge    `xml:"conjugeVarao"`
	ConjugeVaroa       *Conjuge    `xml:"conjugeVaroa"`
	Conjuge            []*Conjuge  `xml:"conjuge"`
	RegimeBens         string      `xml:"regimeBens"`
	DataFimHabilitacao string      `xml:"dataFimHabilitacao"`
	*AtoSelado
}

// CNotificacao ...
type CNotificacao struct {
	CertidaoRC            *CertidaoRC         `xml:"certidaoRC"`
	Notificado            []*Pessoa           `xml:"notificado"`
	Notificacao           []*IntimacaoPessoal `xml:"notificacao"`
	TipoDocumento         string              `xml:"tipoDocumento"`
	ValorNegocio          float64             `xml:"valorNegocio"`
	TipoRegistroAverbacao int                 `xml:"tipoRegistroAverbacao"`
	*AtoSelado
}

// IntimacaoPessoal ...
type IntimacaoPessoal struct {
	HjidAttr          int64   `xml:"Hjid,attr,omitempty"`
	DataIntimacao     string  `xml:"dataIntimacao"`
	DespesaConducao   float64 `xml:"despesaConducao"`
	DespesaDiligencia float64 `xml:"despesaDiligencia"`
	MotivoDevolucao   string  `xml:"motivoDevolucao"`
}

// CNegativa ...
type CNegativa struct {
	Certidao          *Certidao `xml:"certidao"`
	NomeParte         string    `xml:"nomeParte"`
	NomeDaParte       []string  `xml:"nomeDaParte"`
	TipoFato          string    `xml:"tipoFato"`
	DataFato          string    `xml:"dataFato"`
	DataInicioAnalise string    `xml:"dataInicioAnalise"`
	DataFimAnalise    string    `xml:"dataFimAnalise"`
	*AtoSelado
}

// CausaPropriaImovel ...
type CausaPropriaImovel struct {
	XMLName        xml.Name         `xml:"causaPropriaImovel"`
	HjidAttr       int64            `xml:"Hjid,attr,omitempty"`
	Corretor       *Corretor        `xml:"corretor"`
	Frj            []*ImpostosTaxas `xml:"frj"`
	Itcmd          []*ImpostosTaxas `xml:"itcmd"`
	OutrosImpostos []*ImpostosTaxas `xml:"outrosImpostos"`
}

// EProcuracao ...
type EProcuracao struct {
	Escritura                         *Escritura          `xml:"escritura"`
	Outorgante                        []*ParteEscritura   `xml:"outorgante"`
	Outorgado                         []*ParteEscritura   `xml:"outorgado"`
	DataValidade                      string              `xml:"dataValidade"`
	TipoProcuracao                    int                 `xml:"tipoProcuracao"`
	PoderesEspeciais                  string              `xml:"poderesEspeciais"`
	PoderesEspeciaisUniaoEstavel      bool                `xml:"poderesEspeciaisUniaoEstavel"`
	CausaPropriaImovel                *CausaPropriaImovel `xml:"causaPropriaImovel"`
	NumeroSerieSeloProcuracaoOriginal string              `xml:"numeroSerieSeloProcuracaoOriginal"`
	DataRevogacao                     string              `xml:"dataRevogacao"`
	*AtoSelado
}

// CInterdicao ...
type CInterdicao struct {
	CertidaoRC        *CertidaoRC       `xml:"certidaoRC"`
	Interditado       *Pessoa           `xml:"interditado"`
	Curador           *Pessoa           `xml:"curador"`
	CausaInterdicao   string            `xml:"causaInterdicao"`
	DataFimInterdicao string            `xml:"dataFimInterdicao"`
	ProcessoJudicial  *ProcessoJudicial `xml:"processoJudicial"`
	*AtoSelado
}

// CCancelamentoMatricula ...
type CCancelamentoMatricula struct {
	CertidaoRI *CertidaoRI `xml:"certidaoRI"`
	*AtoSelado
}

// CEmancipacao ...
type CEmancipacao struct {
	CertidaoRC               *CertidaoRC       `xml:"certidaoRC"`
	Emancipado               *Pessoa           `xml:"emancipado"`
	Mae                      *Pessoa           `xml:"mae"`
	Pai                      *Pessoa           `xml:"pai"`
	Filiacao                 []*Pessoa         `xml:"filiacao"`
	NumeroSerieSeloEscritura string            `xml:"numeroSerieSeloEscritura"`
	ProcessoJudicial         *ProcessoJudicial `xml:"processoJudicial"`
	*AtoSelado
}

// InstrumentoProtesto ...
type InstrumentoProtesto struct {
	Apontamento      *ApontamentoProtesto `xml:"apontamento"`
	IntimacaoAR      *IntimacaoAR         `xml:"intimacaoAR"`
	IntimacaoPessoal *IntimacaoPessoal    `xml:"intimacaoPessoal"`
	IntimacaoEdital  *IntimacaoEdital     `xml:"intimacaoEdital"`
	Registro         *Registro            `xml:"registro"`
	MotivoAtraso     string               `xml:"motivoAtraso"`
	JurosMoratorios  float64              `xml:"jurosMoratorios"`
	ValorFRJ         float64              `xml:"valorFRJ"`
	*AtoSelado
}

// ApontamentoProtesto ...
type ApontamentoProtesto struct {
	HjidAttr            int64          `xml:"Hjid,attr,omitempty"`
	Protocolo           *Protocolo     `xml:"protocolo"`
	MotivoProtesto      int            `xml:"motivoProtesto"`
	FimFalimentar       bool           `xml:"fimFalimentar"`
	CorrecaoMonetaria   float64        `xml:"correcaoMonetaria"`
	JurosCompensatorios float64        `xml:"jurosCompensatorios"`
	Apresentante        *PessoaResumo  `xml:"apresentante"`
	TituloCredito       *TituloCredito `xml:"tituloCredito"`
}

// TituloCredito ...
type TituloCredito struct {
	HjidAttr              int64           `xml:"Hjid,attr,omitempty"`
	CodigoTitulo          int             `xml:"codigoTitulo"`
	TipoTitulo            int             `xml:"tipoTitulo"`
	NumeroTitulo          string          `xml:"numeroTitulo"`
	CodigoBanco           string          `xml:"codigoBanco"`
	NossoNumero           string          `xml:"nossoNumero"`
	DataEmissao           string          `xml:"dataEmissao"`
	DataVencimento        string          `xml:"dataVencimento"`
	ValorTitulo           float64         `xml:"valorTitulo"`
	ValorProtestado       float64         `xml:"valorProtestado"`
	PracaPagamento        int             `xml:"pracaPagamento"`
	TipoEndosso           int             `xml:"tipoEndosso"`
	Moeda                 int             `xml:"moeda"`
	FormaPagamento        int             `xml:"formaPagamento"`
	SituacaoTitulo        int             `xml:"situacaoTitulo"`
	TituloAceito          bool            `xml:"tituloAceito"`
	ProtocoloDistribuicao int             `xml:"protocoloDistribuicao"`
	DataDistribuicao      string          `xml:"dataDistribuicao"`
	Credor                []*PessoaResumo `xml:"credor"`
	Devedor               *Pessoa         `xml:"devedor"`
	DevedorSolidario      []*Pessoa       `xml:"devedorSolidario"`
	Avalista              []*Pessoa       `xml:"avalista"`
}

// IntimacaoAR ...
type IntimacaoAR struct {
	HjidAttr        int64   `xml:"Hjid,attr,omitempty"`
	DataIntimacao   string  `xml:"dataIntimacao"`
	DespesaAR       float64 `xml:"despesaAR"`
	MotivoDevolucao string  `xml:"motivoDevolucao"`
}

// IntimacaoEdital ...
type IntimacaoEdital struct {
	HjidAttr         int64   `xml:"Hjid,attr,omitempty"`
	DataIntimacao    string  `xml:"dataIntimacao"`
	DespesaEdital    float64 `xml:"despesaEdital"`
	DespesaIntimacao float64 `xml:"despesaIntimacao"`
}

// CApontamentoProtesto ...
type CApontamentoProtesto struct {
	Certidao    *Certidao            `xml:"certidao"`
	Apontamento *ApontamentoProtesto `xml:"apontamento"`
	*AtoSelado
}

// CNarrativaProtesto ...
type CNarrativaProtesto struct {
	Certidao      *Certidao            `xml:"certidao"`
	Apontamento   *ApontamentoProtesto `xml:"apontamento"`
	Narrativa     string               `xml:"narrativa"`
	DataProtesto  string               `xml:"dataProtesto"`
	DataIntimacao string               `xml:"dataIntimacao"`
	Registro      *Registro            `xml:"registro"`
	*AtoSelado
}

// AtoArtigo183Lei6015 ...
type AtoArtigo183Lei6015 struct {
	TipoFato                string            `xml:"tipoFato"`
	IDRegistro              string            `xml:"IDRegistro"`
	IDAverbacao             string            `xml:"IDAverbacao"`
	TipoRegistroAverbacao   int               `xml:"tipoRegistroAverbacao"`
	Protocolo               *Protocolo        `xml:"protocolo"`
	Registro                *Registro         `xml:"registro"`
	NumeroAssento           string            `xml:"numeroAssento"`
	NumeroSeloEscritura     string            `xml:"numeroSeloEscritura"`
	Partes                  []*ParteEscritura `xml:"partes"`
	Imovel                  *Imovel           `xml:"imovel"`
	ValorObjeto             float64           `xml:"valorObjeto"`
	NumeroUnidadesAutonomas int               `xml:"numeroUnidadesAutonomas"`
	MatriculaNacional       int               `xml:"matriculaNacional"`
	*AtoSelado
}

// CGenerica ...
type CGenerica struct {
	Certidao                *Certidao       `xml:"certidao"`
	Registro                *Registro       `xml:"registro"`
	DescricaoCertidao       string          `xml:"descricaoCertidao"`
	NumeroAssento           int             `xml:"numeroAssento"`
	NumeroVia               int             `xml:"numeroVia"`
	Observacoes             []string        `xml:"observacoes"`
	SeloOriginalComunicacao string          `xml:"seloOriginalComunicacao"`
	NomeBusca               []*PessoaResumo `xml:"nomeBusca"`
	*AtoSelado
}

// EditalProclamas ...
type EditalProclamas struct {
	CertidaoRC      *CertidaoRC `xml:"certidaoRC"`
	ConjugeVarao    *Conjuge    `xml:"conjugeVarao"`
	ConjugeVaroa    *Conjuge    `xml:"conjugeVaroa"`
	Conjuge         []*Conjuge  `xml:"conjuge"`
	RegimeBens      string      `xml:"regimeBens"`
	DataPublicacao  string      `xml:"dataPublicacao"`
	LocalPublicacao string      `xml:"localPublicacao"`
	*AtoSelado
}

// CCancelamentoProtesto ...
type CCancelamentoProtesto struct {
	Certidao           *Certidao    `xml:"certidao"`
	Protesto           []*Protocolo `xml:"protesto"`
	MotivoCancelamento int          `xml:"motivoCancelamento"`
	DataProtesto       string       `xml:"dataProtesto"`
	DataIntimacao      string       `xml:"dataIntimacao"`
	*AtoSelado
}

// Outorgante ...
type Outorgante struct {
	XMLName            xml.Name  `xml:"outorgante"`
	AdvogadoAssistente *Advogado `xml:"advogadoAssistente"`
	*ParteEscritura
}

// Outorgado ...
type Outorgado struct {
	XMLName            xml.Name  `xml:"outorgado"`
	AdvogadoAssistente *Advogado `xml:"advogadoAssistente"`
	*ParteEscritura
}

// ESeparacaoDivorcioPartilha ...
type ESeparacaoDivorcioPartilha struct {
	Escritura      *Escritura       `xml:"escritura"`
	Outorgante     []*Outorgante    `xml:"outorgante"`
	Outorgado      []*Outorgado     `xml:"outorgado"`
	Corretor       *Corretor        `xml:"corretor"`
	Frj            []*ImpostosTaxas `xml:"frj"`
	Itcmd          []*ImpostosTaxas `xml:"itcmd"`
	OutrosImpostos []*ImpostosTaxas `xml:"outrosImpostos"`
	*AtoSelado
}

// CAberturaMatricula ...
type CAberturaMatricula struct {
	Protocolo         *Protocolo        `xml:"protocolo"`
	Imovel            *Imovel           `xml:"imovel"`
	Partes            []*ParteEscritura `xml:"partes"`
	RegistroAnterior  []*Registro       `xml:"registroAnterior"`
	NumeroTranscricao string            `xml:"numeroTranscricao"`
	MatriculaNacional int               `xml:"matriculaNacional"`
	*AtoSelado
}

// CReipersecutoria ...
type CReipersecutoria struct {
	CertidaoRI     *CertidaoRI `xml:"certidaoRI"`
	ConstaAcoes    bool        `xml:"constaAcoes"`
	DescricaoAcoes string      `xml:"descricaoAcoes"`
	*AtoSelado
}

// COnus ...
type COnus struct {
	CertidaoRI      *CertidaoRI `xml:"certidaoRI"`
	ConstaOnusReais bool        `xml:"constaOnusReais"`
	DescricaoOnus   string      `xml:"descricaoOnus"`
	*AtoSelado
}

// CPagamentoTitulo ...
type CPagamentoTitulo struct {
	Certidao         *Certidao              `xml:"certidao"`
	Apontamento      []*ApontamentoProtesto `xml:"apontamento"`
	IntimacaoAR      *IntimacaoAR           `xml:"intimacaoAR"`
	IntimacaoPessoal *IntimacaoPessoal      `xml:"intimacaoPessoal"`
	IntimacaoEdital  *IntimacaoEdital       `xml:"intimacaoEdital"`
	JurosMoratorios  float64                `xml:"jurosMoratorios"`
	DataProtesto     string                 `xml:"dataProtesto"`
	DataIntimacao    string                 `xml:"dataIntimacao"`
	*AtoSelado
}

// Selo ...
type Selo struct {
	HjidAttr    int64   `xml:"Hjid,attr,omitempty"`
	TipoSelo    int     `xml:"tipoSelo"`
	NumeroSerie string  `xml:"numeroSerie"`
	ValorSelo   float64 `xml:"valorSelo"`
	Validador   string  `xml:"validador"`
	Nucartorio  int     `xml:"nucartorio"`
}

// Declarante ...
type Declarante struct {
	HjidAttr         int64             `xml:"Hjid,attr,omitempty"`
	NomeDeclarante   string            `xml:"nomeDeclarante"`
	ProcessoJudicial *ProcessoJudicial `xml:"processoJudicial"`
}

// UF ...
type UF string

// Sexo ...
type Sexo string

// RegimeBens ...
type RegimeBens string

// GetCasamento ...
type GetCasamento *GetCasamento

// GetCasamentoResponse ...
type GetCasamentoResponse *GetCasamentoResponse

// GetCasamentosByDtTransmissao ...
type GetCasamentosByDtTransmissao *GetCasamentosByDtTransmissao

// GetCasamentosByDtTransmissaoResponse ...
type GetCasamentosByDtTransmissaoResponse *GetCasamentosByDtTransmissaoResponse

// GetNascimento ...
type GetNascimento *GetNascimento

// GetNascimentoResponse ...
type GetNascimentoResponse *GetNascimentoResponse

// GetNascimentosByDtTransmissao ...
type GetNascimentosByDtTransmissao *GetNascimentosByDtTransmissao

// GetNascimentosByDtTransmissaoResponse ...
type GetNascimentosByDtTransmissaoResponse *GetNascimentosByDtTransmissaoResponse

// GetObito ...
type GetObito *GetObito

// GetObitoResponse ...
type GetObitoResponse *GetObitoResponse

// GetObitos ...
type GetObitos *GetObitos

// GetObitosByDtTransmissao ...
type GetObitosByDtTransmissao *GetObitosByDtTransmissao

// GetObitosByDtTransmissaoResponse ...
type GetObitosByDtTransmissaoResponse *GetObitosByDtTransmissaoResponse

// GetObitosResponse ...
type GetObitosResponse *GetObitosResponse

// GetRecFirmaAutDut ...
type GetRecFirmaAutDut *GetRecFirmaAutDut

// GetRecFirmaAutDutResponse ...
type GetRecFirmaAutDutResponse *GetRecFirmaAutDutResponse

// GetRecFirmaAutDutsByDtTransmissao ...
type GetRecFirmaAutDutsByDtTransmissao *GetRecFirmaAutDutsByDtTransmissao

// GetRecFirmaAutDutsByDtTransmissaoResponse ...
type GetRecFirmaAutDutsByDtTransmissaoResponse *GetRecFirmaAutDutsByDtTransmissaoResponse

// LoginException ...
type LoginException *LoginException

// Exception ...
type Exception *Exception

// SecurityException ...
type SecurityException *SecurityException
